{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/common/Observable.ts","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./src/game/shared/ValueContainer.ts","webpack:///./src/game/shared/GameSystem.ts","webpack:///./src/game/resources/ResourceType.ts","webpack:///./src/game/resources/ResourceValue.ts","webpack:///./src/rendering/react/UIGameContext.tsx","webpack:///./src/common/NumberFormatter.ts","webpack:///./src/rendering/react/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/rendering/react/general.scss?72ba","webpack:///./src/rendering/react/general.scss","webpack:///./src/rendering/react/structure.scss?d2bb","webpack:///./src/rendering/react/structure.scss","webpack:///./src/rendering/react/buildings/buildings.scss?ae25","webpack:///./src/rendering/react/buildings/buildings.scss","webpack:///./src/rendering/react/game-system-tabs/game-system-tabs.scss?a953","webpack:///./src/rendering/react/game-system-tabs/game-system-tabs.scss","webpack:///./src/rendering/react/resources/resources.scss?4fde","webpack:///./src/rendering/react/resources/resources.scss","webpack:///./src/rendering/react/workers/workers.scss?2a4a","webpack:///./src/rendering/react/workers/workers.scss","webpack:///./src/rendering/react/UIGame.tsx","webpack:///./src/game/Game.ts","webpack:///./src/common/ObservableSubscription.ts","webpack:///./src/game/resources/ResourceSystem.ts","webpack:///./src/game/resources/Resource.ts","webpack:///./src/game/workers/WorkerSystem.ts","webpack:///./src/game/workers/ResourceJob.ts","webpack:///./src/game/workers/Job.ts","webpack:///./src/game/buildings/BuildingSystem.ts","webpack:///./src/game/buildings/Building.ts","webpack:///./src/game/resources/ResourceValueContainerSet.ts","webpack:///./src/game/resources/ResourceValueContainer.ts","webpack:///./src/rendering/react/UIHeader.tsx","webpack:///./src/rendering/react/UIBody.tsx","webpack:///./src/rendering/react/workers/UIWorkerSystem.tsx","webpack:///./src/rendering/react/workers/UIJob.tsx","webpack:///./src/rendering/react/buildings/UIBuildings.tsx","webpack:///./src/rendering/react/buildings/UIBuilding.tsx","webpack:///./src/rendering/react/buildings/UIBuildingCost.tsx","webpack:///./src/rendering/react/shared/UIProgressBar.tsx","webpack:///./src/rendering/react/resources/UIResources.tsx","webpack:///./src/rendering/react/resources/UIResource.tsx","webpack:///./src/rendering/react/game-system-tabs/UIGameSystemTabs.tsx","webpack:///./src/rendering/react/game-system-tabs/UIGameSystemTab.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","ObservableFactory","subscriptions","observer","callback","subscription","ObservableSubscription","this","push","filter","args","forEach","apply","useSourceMap","list","toString","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","_i","memo","stylesInDom","isOldIE","Boolean","window","document","all","atob","getTarget","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","listToStyles","options","styles","newStyles","base","part","css","media","parts","addStylesToDom","domStyle","j","refs","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","setAttribute","insert","Error","appendChild","textStore","replaceText","index","replacement","applyToSingletonTag","remove","obj","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","newObj","newList","mayRemove","_domStyle","ValueModifier","amount","baseValue","additiveModifiers","multiplicativeModifiers","onValueChange","createWith1Argument","undefined","setAdditiveModifier","newValue","mod","notify","existingModifier","find","newModifier","recalculateValue","_isUnlocked","onUnlocked","dTime","ResourceType","ResourceValue","resourceType","resourceValueInput","input","GameContext","createContext","NumberFormatter","number","maxDecimals","minDecimals","ceil","amountOfTimesTheNumberCanBeDividedBy1000","multiplier","Math","pow","roundedNumber","numberString","floor","toFixed","postfix","postfixes","ReactDOM","render","UIGame","getElementById","locals","Component","props","super","state","game","newGame","Game","new","buildingSystem","addSubscription","forceUpdate","setState","UIHeader","versionNumber","onNewGameClick","Provider","UIBody","updateFrequency","maxTimeToResumePerUpdate","lastUpdateAsNumber","Date","now","onUpdate","init","startNewGame","BuildingSystem","resourceSystem","ResourceSystem","workerSystem","WorkerSystem","startTimeAsNumber","refreshSystemsIsUnlocked","refreshResourcesIsUnlocked","beginUpdating","updateIntervalID","setInterval","timeSinceLastUpdate","updateGameSystems","isUnlocked","totalWorkerCount","idleWorkerCount","GameSystem","resources","resourceMap","Map","resourceCaps","type","initialCap","Resource","addResourceType","Food","Wood","Stone","Pelt","Gold","Devotion","resource","set","dAmount","income","respectCap","resourceValues","every","resourceValue","getResource","ValueContainer","cap","hasCap","_","recalculateIdleWorkerCount","gathererJob","ResourceJob","woodcutterJob","resourceJobs","jobs","job","onWorkerCountChange","workerCount","resourceIncomeFromJob","onIdleWorkerCountChange","newCount","dWorkerCount","Job","description","incomePerSecond","_workerCount","buildings","baseCost","additiveCostPerBuilding","multiplicativeCostPerBuilding","baseTimeToBuild","additiveTimeToBuildPerBuilding","multiplicativeTimeToBuildPerBuilding","onUpdateAmount","Building","addBuilding","fromArray","thisBuilding","increase","building","costOfNext","getAllAsResourceValues","hasResources","payResources","startBuilding","isBuildingNext","buildTimeRemaining","finishBuilding","ResourceValueContainerSet","timeToBuildNext","onBuildingStarted","refreshCostOfNextBuilding","refreshTimeToBuildNextBuilding","cost","newAmount","setMultiplicativeModifier","newAdditiveModifier","newMultiplicativeModifier","refreshNextBuilding","resourceValueContainers","val","ResourceValueContainer","resourceValueContainerMap","resourceValueContainer","findOrCreateResourceValueContainer","container","className","onClick","selectedGameSystem","UIBuildings","UIWorkerSystem","UIGameSystemTabs","onSelected","system","renderGameSystem","UIResources","newIdleWorkerCount","src","UIJob","newWorkerCount","newTotalWorkerCount","maximumWorkers","setWorkerCountOnJob","toLowerCase","min","max","step","onChange","event","setWorkers","Number","UIBuilding","buyBuilding","getAmountText","toLocaleLowerCase","UIProgressBar","current","UIBuildingCost","buy","Consumer","getAll","Format","width","getFillPercentage","getResources","UIResource","allGameSystems","gameSystems","getUnlockedGameSystems","gameSystem","selectGameSystem","UIGameSystemTab","isSelected"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = React;","import { ObservableSubscription } from \"./ObservableSubscription\";\r\n\r\nexport interface Observable {\r\n    addSubscription(observer: object, callback: () => void): void;\r\n    removeSubscription(observer: object): void;\r\n    notify(): void;\r\n}\r\nexport interface ObservableWith1Argument<T0> {\r\n    addSubscription(observer: object, callback: (p0: T0) => void): void;\r\n    removeSubscription(observer: object): void;\r\n    notify(p0: T0): void;\r\n}\r\nexport interface ObservableWith2Arguments<T0, T1> {\r\n    addSubscription(observer: object, callback: (p0: T0, p1: T1) => void): void;\r\n    removeSubscription(observer: object): void;\r\n    notify(p0: T0, p1: T1): void;\r\n}\r\n\r\nexport class ObservableFactory {\r\n    private subscriptions: ObservableSubscription[] = [];\r\n\r\n    private constructor() {}\r\n\r\n    public static create(): Observable {\r\n        return new ObservableFactory();\r\n    } \r\n    public static createWith1Argument<T0>(): ObservableWith1Argument<T0> {\r\n        return new ObservableFactory();\r\n    } \r\n    public static createWith2Arguments<T0, T1>(): ObservableWith2Arguments<T0, T1> {\r\n        return new ObservableFactory();\r\n    }\r\n\r\n    public addSubscription (observer: object, callback: (...args: any[]) => void): void {\r\n        const subscription = new ObservableSubscription(observer, callback);\r\n        this.subscriptions.push (subscription);\r\n    }\r\n\r\n    public removeSubscription (observer: object): void {\r\n        this.subscriptions = this.subscriptions.filter(s => s.observer !== observer);\r\n    }\r\n\r\n    public notify (...args: any[]): void {\r\n        this.subscriptions.forEach(subscription => subscription.callback.apply(subscription.observer, args));\r\n    }\r\n}","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \"{\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      // eslint-disable-next-line prefer-destructuring\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = modules[_i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = \"(\".concat(item[2], \") and (\").concat(mediaQuery, \")\");\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot).concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","\"use strict\";\n\nvar stylesInDom = {};\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nfunction listToStyles(list, options) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}\n\nfunction addStylesToDom(styles, options) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i];\n    var domStyle = stylesInDom[item.id];\n    var j = 0;\n\n    if (domStyle) {\n      domStyle.refs++;\n\n      for (; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j]);\n      }\n\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j], options));\n      }\n    } else {\n      var parts = [];\n\n      for (; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j], options));\n      }\n\n      stylesInDom[item.id] = {\n        id: item.id,\n        refs: 1,\n        parts: parts\n      };\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n\n  if (typeof options.attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      options.attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(options.attributes).forEach(function (key) {\n    style.setAttribute(key, options.attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  options.attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  var styles = listToStyles(list, options);\n  addStylesToDom(styles, options);\n  return function update(newList) {\n    var mayRemove = [];\n\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i];\n      var domStyle = stylesInDom[item.id];\n\n      if (domStyle) {\n        domStyle.refs--;\n        mayRemove.push(domStyle);\n      }\n    }\n\n    if (newList) {\n      var newStyles = listToStyles(newList, options);\n      addStylesToDom(newStyles, options);\n    }\n\n    for (var _i = 0; _i < mayRemove.length; _i++) {\n      var _domStyle = mayRemove[_i];\n\n      if (_domStyle.refs === 0) {\n        for (var j = 0; j < _domStyle.parts.length; j++) {\n          _domStyle.parts[j]();\n        }\n\n        delete stylesInDom[_domStyle.id];\n      }\n    }\n  };\n};","import { ObservableWith1Argument, ObservableFactory } from \"../../common/Observable\";\r\n\r\nclass ValueModifier {\r\n    public amount: number;\r\n    public key: any;\r\n\r\n    constructor (key: any, amount: number) {\r\n        this.amount = amount;\r\n        this.key = key;\r\n    }\r\n}\r\n\r\nexport class ValueContainer {\r\n    private additiveModifiers: ValueModifier[] = [];\r\n    private multiplicativeModifiers: ValueModifier[] = [];\r\n    public value = 0;\r\n    public onValueChange: ObservableWith1Argument<number> = ObservableFactory.createWith1Argument<number>();\r\n    public constructor (baseValue?: number) {\r\n        if (baseValue !== undefined) {\r\n            this.setAdditiveModifier(this, baseValue);\r\n        }\r\n    }\r\n    public recalculateValue (): void {\r\n        let newValue = 0;\r\n        this.additiveModifiers.forEach(mod => newValue += mod.amount);\r\n        this.multiplicativeModifiers.forEach(mod => newValue *= mod.amount);\r\n        if (this.value !== newValue) {\r\n            this.value = newValue;\r\n            this.onValueChange.notify(newValue);\r\n        }\r\n    }\r\n    public setAdditiveModifier (key: any, amount: number) {\r\n        const existingModifier = this.additiveModifiers.find(mod => mod.key === key);\r\n        if (existingModifier) {\r\n            existingModifier.amount = amount;\r\n        } else {\r\n            const newModifier = new ValueModifier(key, amount);\r\n            this.additiveModifiers.push(newModifier);\r\n        }\r\n        this.recalculateValue();\r\n    }\r\n    public setMultiplicativeModifier (key: any, amount: number) {\r\n        const existingModifier = this.multiplicativeModifiers.find(mod => mod.key === key);\r\n        if (existingModifier) {\r\n            existingModifier.amount = amount;\r\n        } else {\r\n            const newModifier = new ValueModifier(key, amount);\r\n            this.multiplicativeModifiers.push(newModifier);\r\n        }\r\n        this.recalculateValue();\r\n    }\r\n    public removeAllModifiers (key: any): void {\r\n        this.additiveModifiers = this.additiveModifiers.filter(mod => mod.key !== key);\r\n        this.multiplicativeModifiers = this.multiplicativeModifiers.filter(mod => mod.key !== key);\r\n    }\r\n}\r\n","import { Observable, ObservableFactory } from \"../../common/Observable\";\r\n\r\nexport abstract class GameSystem {\r\n    private _isUnlocked: boolean = false;\r\n    public get isUnlocked(): boolean { return this._isUnlocked; };\r\n    public set isUnlocked(value) { \r\n        if (this._isUnlocked !== value) {\r\n            this._isUnlocked = value;\r\n            if (value) {\r\n                this.onUnlocked.notify();\r\n            }\r\n        }\r\n    };\r\n    public onUnlocked: Observable = ObservableFactory.create();\r\n    public update(dTime: number): void {}\r\n    public init(): void {}\r\n    public abstract name: string;\r\n}\r\n","export enum ResourceType {\r\n    Devotion,\r\n    Food,\r\n    Gold,\r\n    Pelt,\r\n    Stone,\r\n    Wood\r\n}","import { ResourceType } from \"./ResourceType\";\r\n\r\nexport class ResourceValue {\r\n    public resourceType: ResourceType;\r\n    public value: number;\r\n    public constructor (resourceType: ResourceType, value: number) {\r\n        this.resourceType = resourceType;\r\n        this.value = value;\r\n    }\r\n    public static fromArray(...resourceValueInput: [ResourceType, number][]): ResourceValue[] {\r\n        return resourceValueInput.map(input => new ResourceValue(input[0], input[1]));\r\n    } \r\n}\r\n","import React = require(\"react\");\r\nimport { Game } from \"../../game/Game\";\r\n\r\nexport const GameContext = React.createContext<Game>(null);\r\n","export class NumberFormatter {\r\n    public static postfixes = ['', 'k', 'm', 'b'];\r\n    public static Format(number: number, maxDecimals?: number, minDecimals?: number, ceil?: boolean): string {\r\n        if (maxDecimals === undefined) {\r\n            maxDecimals = 2;\r\n        }\r\n        if (minDecimals === undefined) {\r\n            minDecimals = maxDecimals;\r\n        }\r\n        if (ceil === undefined) {\r\n            ceil = false;\r\n        }\r\n\r\n        let amountOfTimesTheNumberCanBeDividedBy1000 = 0;\r\n        while(number > 10000) {\r\n            number /= 1000;\r\n            amountOfTimesTheNumberCanBeDividedBy1000++;\r\n        }\r\n\r\n        const multiplier = Math.pow(10, maxDecimals);\r\n        let roundedNumber;\r\n        if (ceil) {\r\n            number -= 0.0001; // Floating point fix.\r\n            roundedNumber = Math.ceil(number * multiplier) / multiplier;\r\n        } else {\r\n            number += 0.0001; // Floating point fix.\r\n            roundedNumber = Math.floor(number * multiplier) / multiplier;\r\n        }\r\n\r\n        let numberString: string;\r\n        if (minDecimals) {\r\n            numberString = roundedNumber.toFixed(minDecimals);\r\n        } else {\r\n            numberString = roundedNumber.toString();\r\n        }\r\n\r\n        const postfix = NumberFormatter.postfixes[amountOfTimesTheNumberCanBeDividedBy1000];\r\n        if (postfix) {\r\n            numberString += postfix;\r\n        }\r\n        return numberString;\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport './general.scss';\r\nimport './structure.scss';\r\n\r\nimport './buildings/buildings.scss';\r\nimport './game-system-tabs/game-system-tabs.scss';\r\nimport './resources/resources.scss';\r\nimport './workers/workers.scss';\r\n\r\nimport { UIGame } from \"./UIGame\";\r\n\r\nReactDOM.render(\r\n    <UIGame />,\r\n    document.getElementById(\"game-container\")\r\n);","module.exports = ReactDOM;","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./general.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".flexbox{display:flex}.flexbox-between{display:flex;justify-content:space-between}.flexbox-column{display:flex;flex-direction:column}.flexbox-column-between{display:flex;flex-direction:column;justify-content:space-between}.button{background-color:#99b;border:2px solid grey;display:inline-block;padding-left:15px;padding-right:15px;cursor:pointer}.large-list-card{background-color:#b95;border:2px solid grey;min-height:150px;width:600px;margin-bottom:5px}.progress-bar{width:100%;height:10px;background-color:#141414;border:1px solid grey}.progress-bar .bar{height:100%;background-color:#99b;display:block}\\n\", \"\"]);\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./structure.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"body{background-color:#141414;color:#f2f2f2;user-select:none}#header{width:100%;height:50px;background-color:#303030;display:flex;justify-content:space-between;padding:5px}#header .title-container{display:flex;flex-direction:column}#header .title-container .title{font-size:25px}#header .title-container .version-number{font-size:10px}#header .btn-new-game{padding-top:8px}#body{display:flex;justify-content:space-between;padding:10px}#tabs-and-tab-content-container{display:flex}\\n\", \"\"]);\n","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./buildings.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".building{display:flex}.building .name-and-image-container{display:flex;flex-direction:column;align-items:center;justify-content:space-evenly;padding:5px;width:150px}.building .name{font-size:20px}.building .description-container{display:flex;flex-direction:column;justify-content:space-around;padding:5px;width:250px}.building .resources{width:200px;margin:5px;padding:10px;display:flex;flex-direction:column;justify-content:space-around}.building .resources .resource{display:flex;justify-content:space-between;font-weight:800}\\n\", \"\"]);\n","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./game-system-tabs.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"#tabs .tab.selected{border:2px solid grey}#tabs .tab{border:2px solid #555555;display:flex;flex-direction:column;padding:10px;margin-bottom:5px;background-color:#b95;align-items:center}\\n\", \"\"]);\n","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./resources.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"#resources{width:300px}#resources>li{display:flex;justify-content:space-between}\\n\", \"\"]);\n","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./workers.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"#worker-system .job{display:flex;padding:10px}#worker-system .job .name-and-image-container{width:100px;height:100px;display:flex;flex-direction:column;align-items:center}#worker-system .job .description-and-slider-container{flex:1 1 auto;display:flex;align-items:center}#worker-system .job .description{flex:1 1 0}#worker-system .job .slider{flex:1 1 0}\\n\", \"\"]);\n","import * as React from \"react\";\r\nimport { Game } from \"../../game/Game\";\r\nimport { GameContext } from \"./UIGameContext\";\r\nimport { UIHeader } from \"./UIHeader\";\r\nimport { UIBody } from \"./UIBody\";\r\n\r\nexport class UIGame extends React.Component<{}, {game: Game}> {\r\n    constructor (props: {game: Game}) {\r\n        super(props);\r\n\r\n        this.state = {game: null};\r\n    }\r\n    newGame() {\r\n        const newGame = Game.new();\r\n        newGame.buildingSystem.onUnlocked.addSubscription(this, () => this.forceUpdate());\r\n        this.setState({game: newGame});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <UIHeader versionNumber={'0.0.2'} onNewGameClick={()=>this.newGame()}></UIHeader>\r\n                {\r\n                    this.state.game\r\n                    ? \r\n                    <GameContext.Provider value={this.state.game}>\r\n                        <UIBody game={this.state.game}></UIBody>\r\n                    </GameContext.Provider>\r\n                    : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import { Observable, ObservableFactory } from \"../common/Observable\";\r\nimport { ResourceSystem } from \"./resources/ResourceSystem\";\r\nimport { WorkerSystem } from \"./workers/WorkerSystem\";\r\nimport { BuildingSystem } from \"./buildings/BuildingSystem\";\r\n\r\nexport class Game {\r\n    private updateFrequency: number = 100;\r\n    private maxTimeToResumePerUpdate: number = 24 * 60 * 60 * 1000;\r\n\r\n    private updateIntervalID: number;\r\n    private lastUpdateAsNumber: number = Date.now();\r\n    \r\n    private startTimeAsNumber: number;\r\n\r\n    public buildingSystem: BuildingSystem;\r\n    public resourceSystem: ResourceSystem;\r\n    public workerSystem: WorkerSystem;\r\n\r\n    public onUpdate: Observable = ObservableFactory.create();\r\n\r\n    public static new(): Game {\r\n        const game = new Game();\r\n        game.init();\r\n        game.startNewGame();\r\n        return game;\r\n    }\r\n\r\n    private constructor () {}\r\n\r\n    public init (): void {\r\n        this.buildingSystem = new BuildingSystem(this);\r\n        this.buildingSystem.init();\r\n\r\n        this.resourceSystem = new ResourceSystem();\r\n        this.resourceSystem.init();\r\n\r\n        this.workerSystem = new WorkerSystem(this);\r\n        this.workerSystem.init();\r\n    }\r\n\r\n    public startNewGame (): void {\r\n        this.startTimeAsNumber = Date.now();\r\n        this.workerSystem.newGame();\r\n        this.refreshSystemsIsUnlocked();\r\n        this.resourceSystem.refreshResourcesIsUnlocked();\r\n        this.beginUpdating();\r\n    }\r\n\r\n    private beginUpdating(): void {\r\n        this.updateIntervalID = setInterval(() => {\r\n            this.update();\r\n        }, this.updateFrequency);\r\n    }\r\n\r\n    private update (): void {\r\n        let timeSinceLastUpdate = Date.now() - this.lastUpdateAsNumber;\r\n\r\n        // Cap catch up duration\r\n        if (timeSinceLastUpdate > this.maxTimeToResumePerUpdate) {\r\n            timeSinceLastUpdate = this.maxTimeToResumePerUpdate;\r\n            this.lastUpdateAsNumber = Date.now() - this.maxTimeToResumePerUpdate;\r\n        }\r\n\r\n        // Update until caught up\r\n        while (timeSinceLastUpdate > this.updateFrequency) {\r\n            timeSinceLastUpdate -= this.updateFrequency;\r\n            this.lastUpdateAsNumber = this.lastUpdateAsNumber + this.updateFrequency;\r\n\r\n            this.updateGameSystems(this.updateFrequency);\r\n        }\r\n\r\n        this.onUpdate.notify();\r\n    }\r\n\r\n    private updateGameSystems (dTime: number): void {        \r\n        this.resourceSystem.update(dTime);\r\n        this.buildingSystem.update(dTime);\r\n    }\r\n\r\n    private refreshSystemsIsUnlocked() {\r\n        this.workerSystem.isUnlocked = true;\r\n        this.resourceSystem.isUnlocked = true;\r\n        this.buildingSystem.isUnlocked = this.workerSystem.totalWorkerCount.value > 1 || this.workerSystem.idleWorkerCount === 0;\r\n    }\r\n}","export class ObservableSubscription {\r\n    public observer: object;\r\n    public callback: (...args: any[]) => void;\r\n    public constructor (observer: object, callback: (...args: any[]) => void) {\r\n        this.observer = observer;\r\n        this.callback = callback;\r\n    }\r\n}","import { GameSystem } from \"../shared/GameSystem\";\r\nimport { Resource } from \"./Resource\";\r\nimport { ResourceType } from \"./ResourceType\";\r\nimport { ResourceValueContainer } from \"./ResourceValueContainer\";\r\nimport { ResourceValue } from \"./ResourceValue\";\r\n\r\nexport class ResourceSystem extends GameSystem {\r\n    public name: string = 'Resources';\r\n    public resources: Resource[] = [];\r\n    public resourceMap: Map<ResourceType, Resource> = new Map();\r\n    public resourceCaps: ResourceValueContainer[] = [];\r\n    private addResourceType(name: string, type: ResourceType, initialCap?: number): void {\r\n        this.resources.push(new Resource(name, type, initialCap));\r\n    }\r\n    public init(): void {\r\n        this.addResourceType(\"Food\", ResourceType.Food, 500);\r\n        this.addResourceType(\"Wood\", ResourceType.Wood, 500);\r\n        this.addResourceType(\"Stone\", ResourceType.Stone, 100);\r\n        this.addResourceType(\"Pelt\", ResourceType.Pelt, 100);\r\n        this.addResourceType(\"Gold\", ResourceType.Gold, 100);\r\n        this.addResourceType(\"Devotion\", ResourceType.Devotion);\r\n\r\n        this.resources.forEach(resource => this.resourceMap.set(resource.type, resource));\r\n    }\r\n    public getResource(type: ResourceType): Resource {\r\n        return this.resourceMap.get(type);\r\n    }\r\n    public update(dTime: number): void {\r\n        this.resources.forEach(resource => {\r\n            const dAmount = resource.income.value * dTime / 1000;\r\n            resource.amount += dAmount;\r\n            resource.respectCap();\r\n        });\r\n    }\r\n    public hasResources(resourceValues: ResourceValue[]): boolean {\r\n        return resourceValues.every(resourceValue => {\r\n            const resource = this.getResource(resourceValue.resourceType);\r\n            return resource.amount >= resourceValue.value;\r\n        });\r\n    }\r\n    public payResources(resourceValues: ResourceValue[]): void {\r\n        return resourceValues.forEach(resourceValue => {\r\n            const resource = this.getResource(resourceValue.resourceType);\r\n            resource.amount -= resourceValue.value;\r\n        });\r\n    }\r\n    public refreshResourcesIsUnlocked(): void {\r\n        this.resourceMap.get(ResourceType.Food).isUnlocked = true;\r\n        this.resourceMap.get(ResourceType.Wood).isUnlocked = true;\r\n    }\r\n}\r\n","import { ValueContainer } from \"../shared/ValueContainer\";\r\nimport { ResourceType } from \"./ResourceType\";\r\nimport { Observable, ObservableFactory } from \"../../common/Observable\";\r\n\r\nexport class Resource {\r\n    private _isUnlocked: boolean = false;\r\n    public get isUnlocked(): boolean { return this._isUnlocked; };\r\n    public set isUnlocked(value) { \r\n        if (this._isUnlocked !== value) {\r\n            this._isUnlocked = value;\r\n            if (value) {\r\n                this.onUnlocked.notify();\r\n            }\r\n        }\r\n    };\r\n    public onUnlocked: Observable = ObservableFactory.create();\r\n    public amount: number = 0;\r\n    public income: ValueContainer = new ValueContainer();\r\n    public cap: ValueContainer = new ValueContainer();\r\n    public hasCap: boolean;\r\n    public name: string;\r\n    public type: ResourceType;\r\n    public constructor(name: string, type: ResourceType, initialCap?: number) {\r\n        this.name = name;\r\n        this.type = type;\r\n        if (initialCap === undefined) {\r\n            this.hasCap = false;\r\n        } else {\r\n            this.hasCap = true;\r\n            this.cap.setAdditiveModifier(this, initialCap);\r\n        }\r\n    }\r\n\r\n    public respectCap(): void {\r\n        if (this.hasCap && this.amount > this.cap.value) {\r\n            this.amount = this.cap.value;\r\n        }\r\n    }\r\n}","import { GameSystem } from \"../shared/GameSystem\";\r\nimport { ObservableWith1Argument, ObservableFactory } from \"../../common/Observable\";\r\nimport { ResourceJob } from \"./ResourceJob\";\r\nimport { ResourceType } from \"../resources/ResourceType\";\r\nimport { Game } from \"../Game\";\r\nimport { Job } from \"./Job\";\r\nimport { ValueContainer } from \"../shared/ValueContainer\";\r\n\r\nexport class WorkerSystem extends GameSystem {\r\n    private game: Game;\r\n\r\n    public name: string = 'Workers';\r\n    public idleWorkerCount: number;\r\n    public totalWorkerCount: ValueContainer;\r\n    public onIdleWorkerCountChange: ObservableWith1Argument<number>;\r\n\r\n    public gathererJob: ResourceJob;\r\n    public woodcutterJob: ResourceJob;\r\n    public resourceJobs: ResourceJob[];\r\n\r\n    public jobs: Job[];\r\n\r\n    public constructor (game: Game) {\r\n        super();\r\n        this.game = game;\r\n    }\r\n\r\n    public init(): void {\r\n        this.totalWorkerCount = new ValueContainer();\r\n        this.totalWorkerCount.setAdditiveModifier(this, 1);\r\n        this.totalWorkerCount.onValueChange.addSubscription(this, _ => this.recalculateIdleWorkerCount());\r\n\r\n        this.gathererJob = new ResourceJob(\"Gatherer\", \"Search nearby forests for berries and shrooms\", 0.5, ResourceType.Food);\r\n        this.woodcutterJob = new ResourceJob(\"Woodcutter\", \"Chop down trees for wood\", 25, ResourceType.Wood);\r\n        this.resourceJobs = [\r\n            this.gathererJob,\r\n            this.woodcutterJob\r\n        ];\r\n\r\n        this.jobs = [...this.resourceJobs];\r\n\r\n        // Bind resource jobs to resources\r\n        this.resourceJobs.forEach(job => {\r\n            const resource = this.game.resourceSystem.getResource(job.resourceType);\r\n            job.onWorkerCountChange.addSubscription(this, (workerCount: number) => {\r\n                const resourceIncomeFromJob = workerCount * job.value.value;\r\n                resource.income.setAdditiveModifier(job, resourceIncomeFromJob);\r\n            });\r\n        });\r\n\r\n        this.onIdleWorkerCountChange = ObservableFactory.createWith1Argument<number>();\r\n    }\r\n\r\n    public newGame(): void {\r\n        this.recalculateIdleWorkerCount();\r\n    }\r\n\r\n    public recalculateIdleWorkerCount(): void {\r\n        let newCount = this.totalWorkerCount.value;\r\n        this.jobs.forEach(job => newCount -= job.workerCount);\r\n        if (this.idleWorkerCount !== newCount) {\r\n            this.idleWorkerCount = newCount;\r\n            this.onIdleWorkerCountChange.notify(this.idleWorkerCount);\r\n        }\r\n    }\r\n\r\n    public setWorkerCountOnJob(job: Job, workerCount: number) {\r\n        const dWorkerCount = workerCount - job.workerCount;\r\n        if (dWorkerCount > 0) {\r\n            if (this.idleWorkerCount >= dWorkerCount) {\r\n                job.workerCount += dWorkerCount;\r\n            } else {\r\n                throw `Cannot assign ${dWorkerCount} workers - only ${this.idleWorkerCount} workers available.`;\r\n            }\r\n        } else {\r\n            if (workerCount >= 0) {\r\n                job.workerCount += dWorkerCount;\r\n            } else {\r\n                throw `Cannot assign a negative amount of workers to a job`;\r\n            }\r\n        }\r\n        this.game.buildingSystem.isUnlocked = true;\r\n        this.recalculateIdleWorkerCount();\r\n    }\r\n}","import { ResourceType } from \"../resources/ResourceType\";\r\nimport { Job } from \"./Job\";\r\n\r\nexport class ResourceJob extends Job {\r\n    public resourceType: ResourceType;\r\n\r\n    public constructor(name: string, description: string, incomePerSecond: number, resourceType: ResourceType) {\r\n        super(name, description, incomePerSecond);\r\n        this.resourceType = resourceType;\r\n    }\r\n}","import { ValueContainer } from \"../shared/ValueContainer\";\r\nimport { ObservableFactory, ObservableWith1Argument } from \"../../common/Observable\";\r\n\r\nexport class Job {\r\n    constructor (name: string, description: string, value: number) {\r\n        this._workerCount = 0;\r\n\r\n        this.name = name;\r\n        this.description = description;\r\n        this.value = new ValueContainer();\r\n        this.value.setAdditiveModifier(this, value);\r\n        this.onWorkerCountChange = ObservableFactory.createWith1Argument<number>();\r\n    }\r\n    public name: string;\r\n    public description: string;\r\n    public value: ValueContainer;\r\n    public onWorkerCountChange: ObservableWith1Argument<number>;\r\n\r\n    private _workerCount: number;\r\n    public get workerCount(): number {\r\n        return this._workerCount;\r\n    }\r\n    public set workerCount(value: number) {\r\n        this._workerCount = value;\r\n        this.onWorkerCountChange.notify(value);\r\n    }\r\n}","import { GameSystem } from \"../shared/GameSystem\";\r\nimport { Building } from \"./Building\";\r\nimport { ResourceValueContainer } from \"../resources/ResourceValueContainer\";\r\nimport { ResourceType } from \"../resources/ResourceType\";\r\nimport { Game } from \"../Game\";\r\nimport { ResourceValue } from \"../resources/ResourceValue\";\r\n\r\nexport class BuildingSystem extends GameSystem {\r\n    private game: Game;\r\n    public name: string = 'Buildings';\r\n    public buildings: Building[] = [];\r\n    public constructor(game: Game) {\r\n        super();\r\n        this.game = game;\r\n    }\r\n    private addBuilding(\r\n        name: string,\r\n        description: string,\r\n        baseCost: ResourceValue[],\r\n        additiveCostPerBuilding: ResourceValue[],\r\n        multiplicativeCostPerBuilding: ResourceValue[],\r\n        baseTimeToBuild: number,\r\n        additiveTimeToBuildPerBuilding: number,\r\n        multiplicativeTimeToBuildPerBuilding: number,\r\n        onUpdateAmount: (thisBuilding: Building) => void\r\n    ): void {\r\n        this.buildings.push(\r\n            new Building(\r\n                name, \r\n                description, \r\n                baseCost, \r\n                additiveCostPerBuilding, \r\n                multiplicativeCostPerBuilding, \r\n                baseTimeToBuild,\r\n                additiveTimeToBuildPerBuilding,\r\n                multiplicativeTimeToBuildPerBuilding,\r\n                onUpdateAmount));\r\n    }\r\n    public init(): void {\r\n        this.addBuilding(\r\n            'Hut', \r\n            'Allows another worker to join your village',\r\n            ResourceValue.fromArray([ResourceType.Wood, 100]),\r\n            ResourceValue.fromArray([ResourceType.Wood, 20]),\r\n            ResourceValue.fromArray([ResourceType.Wood, 1.2]),\r\n            1000,\r\n            500,\r\n            null,\r\n            (thisBuilding: Building): void => {\r\n              this.game.workerSystem.totalWorkerCount.setAdditiveModifier(thisBuilding, thisBuilding.amount);\r\n            }\r\n        );\r\n\r\n        this.addBuilding(\r\n            'Shed', \r\n            'Increases the storage',\r\n            ResourceValue.fromArray([ResourceType.Wood, 300]),\r\n            ResourceValue.fromArray([ResourceType.Wood, 50]),\r\n            ResourceValue.fromArray(),\r\n            1000,\r\n            500,\r\n            null,\r\n            (thisBuilding: Building): void => {\r\n                const increases = ResourceValue.fromArray(\r\n                    [ResourceType.Food, 50],\r\n                    [ResourceType.Wood, 100]\r\n                );\r\n\r\n                increases.forEach(increase => \r\n                    this.game.resourceSystem.getResource(increase.resourceType).cap.setAdditiveModifier(thisBuilding, thisBuilding.amount * increase.value)    \r\n                );\r\n            }\r\n        );\r\n    }\r\n    public buyBuilding(building: Building): void {\r\n        const costOfNext = building.costOfNext.getAllAsResourceValues();\r\n        if (this.game.resourceSystem.hasResources(costOfNext)) {\r\n            this.game.resourceSystem.payResources(costOfNext);\r\n            building.startBuilding();\r\n        }\r\n    }\r\n    public update(dTime: number): void {\r\n        this.buildings.forEach(building => {\r\n            if (building.isBuildingNext) {\r\n                building.buildTimeRemaining -= dTime;\r\n                if (building.buildTimeRemaining <= 0) {\r\n                    building.finishBuilding();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","import { ResourceValueContainer } from \"../resources/ResourceValueContainer\";\r\nimport { ObservableFactory, ObservableWith1Argument } from \"../../common/Observable\";\r\nimport { ResourceValue } from \"../resources/ResourceValue\";\r\nimport { ResourceValueContainerSet } from \"../resources/ResourceValueContainerSet\";\r\nimport { ValueContainer } from \"../shared/ValueContainer\";\r\n\r\nexport class Building {\r\n    private additiveCostPerBuilding: ResourceValue[];\r\n    private multiplicativeCostPerBuilding: ResourceValue[];\r\n    private additiveTimeToBuildPerBuilding: number;\r\n    private multiplicativeTimeToBuildPerBuilding: number;\r\n    public onBuildingStarted: ObservableWith1Argument<Building>;\r\n    public onUpdateAmount: ObservableWith1Argument<Building>;\r\n    public amount: number;\r\n    public name: string;\r\n    public description: string;\r\n    public costOfNext: ResourceValueContainerSet;\r\n    public timeToBuildNext: ValueContainer;\r\n    public buildTimeRemaining: number;\r\n    public isBuildingNext: boolean = false;\r\n    public constructor(\r\n        name: string,\r\n        description: string,\r\n        baseCost: ResourceValue[],\r\n        additiveCostPerBuilding: ResourceValue[],\r\n        multiplicativeCostPerBuilding: ResourceValue[],\r\n        baseTimeToBuild: number,\r\n        additiveTimeToBuildPerBuilding: number,\r\n        multiplicativeTimeToBuildPerBuilding: number,\r\n        onUpdateAmount: (thisBuilding: Building) => void\r\n    ) {\r\n        this.amount = 0;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.costOfNext = new ResourceValueContainerSet(baseCost);\r\n        this.timeToBuildNext = new ValueContainer(baseTimeToBuild);\r\n\r\n        this.additiveCostPerBuilding = additiveCostPerBuilding;\r\n        this.multiplicativeCostPerBuilding = multiplicativeCostPerBuilding;\r\n        this.additiveTimeToBuildPerBuilding = additiveTimeToBuildPerBuilding;\r\n        this.multiplicativeTimeToBuildPerBuilding = multiplicativeTimeToBuildPerBuilding;\r\n\r\n        this.onUpdateAmount = ObservableFactory.createWith1Argument<Building>();\r\n        this.onUpdateAmount.addSubscription(this, onUpdateAmount);\r\n\r\n        this.onBuildingStarted = ObservableFactory.createWith1Argument<Building>();\r\n    }\r\n    private refreshNextBuilding(): void {\r\n        this.refreshCostOfNextBuilding();\r\n        this.refreshTimeToBuildNextBuilding();\r\n    }\r\n    private refreshCostOfNextBuilding(): void {\r\n        this.additiveCostPerBuilding.forEach(cost => {\r\n            const newAmount = cost.value * this.amount;\r\n            this.costOfNext.setAdditiveModifier(this, cost.resourceType, newAmount);\r\n        });\r\n\r\n        this.multiplicativeCostPerBuilding.forEach(cost => {\r\n            const newAmount = Math.pow(cost.value, this.amount);\r\n            this.costOfNext.setMultiplicativeModifier(this, cost.resourceType, newAmount);\r\n        });\r\n    }\r\n    private refreshTimeToBuildNextBuilding(): void {\r\n        if (this.additiveTimeToBuildPerBuilding) {\r\n            const newAdditiveModifier = this.additiveTimeToBuildPerBuilding * this.amount;\r\n            this.timeToBuildNext.setAdditiveModifier(this, newAdditiveModifier);\r\n        }\r\n        if (this.multiplicativeTimeToBuildPerBuilding) {\r\n            const newMultiplicativeModifier = Math.pow(this.multiplicativeTimeToBuildPerBuilding, this.amount);\r\n            this.timeToBuildNext.setMultiplicativeModifier(this, newMultiplicativeModifier);\r\n        }\r\n    }\r\n    public startBuilding(): void {\r\n        this.isBuildingNext = true;\r\n        this.buildTimeRemaining = this.timeToBuildNext.value;\r\n        this.onBuildingStarted.notify(this);\r\n    }\r\n    public finishBuilding(): void {\r\n        this.amount++;\r\n        this.isBuildingNext = false;\r\n        this.refreshNextBuilding();\r\n        this.onUpdateAmount.notify(this);\r\n    }\r\n}\r\n","import { ResourceValueContainer } from \"./ResourceValueContainer\";\r\nimport { ResourceType } from \"./ResourceType\";\r\nimport { ResourceValue } from \"./ResourceValue\";\r\n\r\nexport class ResourceValueContainerSet {\r\n    private resourceValueContainerMap: Map<ResourceType, ResourceValueContainer>;\r\n    private resourceValueContainers: ResourceValueContainer[];\r\n    public constructor (resourceValues: ResourceValue[]) {\r\n        this.resourceValueContainers = resourceValues.map(val => new ResourceValueContainer(val.resourceType, val.value));\r\n        this.resourceValueContainerMap = new Map<ResourceType, ResourceValueContainer>();\r\n        this.resourceValueContainers.forEach(val => this.resourceValueContainerMap.set(val.resourceType, val)); \r\n    }\r\n    private findOrCreateResourceValueContainer(resourceType: ResourceType): ResourceValueContainer {\r\n        let resourceValueContainer = this.resourceValueContainerMap.get(resourceType);\r\n        if (!resourceValueContainer) {\r\n            resourceValueContainer = new ResourceValueContainer(resourceType);\r\n            this.resourceValueContainers.push(resourceValueContainer);\r\n            this.resourceValueContainerMap.set(resourceType, resourceValueContainer);\r\n        }\r\n        return resourceValueContainer;\r\n    }\r\n    public setAdditiveModifier (key: any, resourceType: ResourceType, amount: number): void {\r\n        const resourceValueContainer = this.findOrCreateResourceValueContainer(resourceType);\r\n        resourceValueContainer.value.setAdditiveModifier(key, amount);\r\n    }\r\n    public setMultiplicativeModifier (key: any, resourceType: ResourceType, amount: number): void {\r\n        const resourceValueContainer = this.findOrCreateResourceValueContainer(resourceType);\r\n        resourceValueContainer.value.setMultiplicativeModifier(key, amount);\r\n    }\r\n    public getAll(): ResourceValueContainer[] {\r\n        return this.resourceValueContainers;\r\n    }\r\n    public getAllAsMap(): Map<ResourceType, ResourceValueContainer> {\r\n        return this.resourceValueContainerMap;\r\n    }\r\n    public getAllAsResourceValues(): ResourceValue[] {\r\n        return this.resourceValueContainers.map(container => new ResourceValue(container.resourceType, container.value.value));\r\n    }\r\n}\r\n","import { ResourceType } from \"./ResourceType\";\r\nimport { ValueContainer } from \"../shared/ValueContainer\";\r\n\r\nexport class ResourceValueContainer {\r\n    public resourceType: ResourceType;\r\n    public value: ValueContainer;\r\n    public constructor (resourceType: ResourceType, baseValue?: number) {\r\n        this.resourceType = resourceType;\r\n        this.value = new ValueContainer(baseValue);\r\n    }\r\n}\r\n","import React = require(\"react\");\r\n\r\nexport class UIHeader extends React.Component<{versionNumber: string, onNewGameClick: () => void}> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div id=\"header\">\r\n                <span className=\"title-container\">\r\n                    <span className=\"title\">Quiet Village</span>\r\n                    <span className=\"version-number\">v{this.props.versionNumber}</span>\r\n                </span>\r\n                <span className=\"button btn-new-game\" onClick={this.props.onNewGameClick}>New game</span>\r\n            </div>\r\n        );\r\n    }\r\n}","import React = require(\"react\");\r\nimport { Game } from \"../../game/Game\";\r\nimport { UIWorkerSystem } from \"./workers/UIWorkerSystem\";\r\nimport { UIBuildings } from \"./buildings/UIBuildings\";\r\nimport { UIResources } from \"./resources/UIResources\";\r\nimport { UIGameSystemTabs } from \"./game-system-tabs/UIGameSystemTabs\";\r\nimport { GameSystem } from \"../../game/shared/GameSystem\";\r\n\r\nexport class UIBody extends React.Component<{game: Game},{selectedGameSystem: GameSystem}> {\r\n    private renderGameSystem(): JSX.Element {\r\n        if (!this.state || !this.state.selectedGameSystem || !this.state.selectedGameSystem.isUnlocked) {\r\n            return null;\r\n        }\r\n\r\n        switch(this.state.selectedGameSystem) {\r\n            case this.props.game.buildingSystem:\r\n                return <UIBuildings game={this.props.game}></UIBuildings>\r\n            case this.props.game.workerSystem:\r\n                return <UIWorkerSystem game={this.props.game}></UIWorkerSystem>\r\n            default: \r\n                return null;\r\n        }\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div id=\"body\">\r\n                <span id=\"tabs-and-tab-content-container\">\r\n                    <UIGameSystemTabs \r\n                        game={this.props.game} \r\n                        onSelected={(system: GameSystem)=>this.setState({selectedGameSystem:system})}\r\n                    ></UIGameSystemTabs>\r\n                    <span id=\"tab-content\">\r\n                        {this.renderGameSystem()}\r\n                    </span>\r\n                </span>\r\n                <UIResources game={this.props.game}></UIResources>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { UIJob } from \"./UIJob\";\r\nimport { Game } from \"../../../game/Game\";\r\n\r\ninterface _State {\r\n    idleWorkerCount: number\r\n}\r\nexport class UIWorkerSystem extends React.Component<{game: Game}, _State> {\r\n    constructor (props: {game: Game}) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            idleWorkerCount: this.props.game.workerSystem.idleWorkerCount\r\n        };\r\n\r\n        this.props.game.workerSystem.onIdleWorkerCountChange.addSubscription(\r\n            this,\r\n            (newIdleWorkerCount) => {\r\n                this.setState({idleWorkerCount: newIdleWorkerCount});\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"worker-system\">\r\n                <div className=\"job large-list-card\">\r\n                    <span className=\"name-and-image-container\">\r\n                        <span>Idle({this.state.idleWorkerCount})</span>\r\n                        <img src={`./img/worker/jobs/idle.png`} />\r\n                    </span>\r\n                    <span className=\"description-and-slider-container\">\r\n                        <span>Idle workers do not help the village in any way - Put them to work!</span>\r\n                    </span>\r\n                </div>\r\n                <ul>\r\n                {this.props.game.workerSystem.jobs.map((job) => \r\n                    <UIJob key={job.name} game={this.props.game} job={job}>\r\n                    </UIJob>\r\n                )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Job } from \"../../../game/workers/Job\";\r\nimport { Game } from \"../../../game/Game\";\r\n\r\ninterface _State {\r\n    workerCount: number,\r\n    totalWorkerCount: number\r\n}\r\nexport class UIJob extends React.Component<{game: Game, job: Job}, _State> {\r\n    public constructor (props: {game: Game, job: Job}) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            workerCount: this.props.job.workerCount,\r\n            totalWorkerCount: this.props.game.workerSystem.totalWorkerCount.value\r\n        };\r\n\r\n        this.props.job.onWorkerCountChange.addSubscription(\r\n            this,\r\n            (newWorkerCount: number) => \r\n                this.setState({workerCount: newWorkerCount}));\r\n\r\n        this.props.game.workerSystem.totalWorkerCount.onValueChange.addSubscription(\r\n            this,\r\n            (newTotalWorkerCount: number) => \r\n                this.setState({totalWorkerCount: newTotalWorkerCount}));\r\n    }\r\n    private setWorkers(newWorkerCount: number): void {\r\n        const maximumWorkers = this.props.job.workerCount + this.props.game.workerSystem.idleWorkerCount;\r\n        if(maximumWorkers >= newWorkerCount) {\r\n            this.props.game.workerSystem.setWorkerCountOnJob(this.props.job, newWorkerCount);\r\n        } else {\r\n            this.props.game.workerSystem.setWorkerCountOnJob(this.props.job, maximumWorkers);\r\n        }\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <li key={this.props.job.name}>\r\n                <div className=\"job large-list-card\">\r\n                    <span className=\"name-and-image-container\">\r\n                        <span>{this.props.job.name}({this.state.workerCount})</span>\r\n                        <img src={`./img/worker/jobs/${this.props.job.name.toLowerCase()}.png`} />\r\n                    </span>\r\n                    <span className=\"description-and-slider-container\">\r\n                        <span className=\"description\">{this.props.job.description}</span>\r\n                        <input \r\n                            className=\"slider\"\r\n                            type=\"range\"\r\n                            min=\"0\" \r\n                            max={this.state.totalWorkerCount} \r\n                            step=\"1\"\r\n                            value={this.state.workerCount}\r\n                            onChange={(event) => this.setWorkers(Number(event.target.value))}\r\n                        />\r\n                    </span>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Game } from \"../../../game/Game\";\r\nimport { UIBuilding } from \"./UIBuilding\";\r\n\r\nexport class UIBuildings extends React.Component<{game: Game}> {\r\n    constructor (props: {game: Game}) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <ul>\r\n            {this.props.game.buildingSystem.buildings.map((building) => \r\n                <UIBuilding \r\n                    key={building.name} \r\n                    game={this.props.game} \r\n                    building={building}>\r\n                </UIBuilding>\r\n            )}\r\n            </ul>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Game } from \"../../../game/Game\";\r\nimport { Building } from \"../../../game/buildings/Building\";\r\nimport { UIBuildingCost } from \"./UIBuildingCost\";\r\nimport { UIProgressBar } from \"../shared/UIProgressBar\";\r\n\r\ninterface BuildingLine {\r\n    name: string,\r\n    amount: number\r\n}\r\nexport class UIBuilding extends React.Component<{game: Game, building: Building}, BuildingLine> {\r\n    public constructor (props: {game: Game, building: Building}) {\r\n        super(props);\r\n\r\n        this.props.building.onUpdateAmount.addSubscription(\r\n            this,\r\n            (thisBuilding: Building) => this.forceUpdate()\r\n        );\r\n\r\n        this.props.game.onUpdate.addSubscription(this, () => this.forceUpdate());\r\n    }\r\n    private buy (): void {\r\n        this.props.game.buildingSystem.buyBuilding(this.props.building);\r\n    }\r\n    private getAmountText(): string {\r\n        return this.props.building.amount > 0 ? '(' + this.props.building.amount + ')' : '';\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <li key={this.props.building.name} className=\"building large-list-card\">\r\n                <span className=\"name-and-image-container\">\r\n                    <span className=\"name\">{this.props.building.name + this.getAmountText()}</span>\r\n                    <img src={`./img/buildings/${this.props.building.name.toLocaleLowerCase()}.png`} />\r\n                </span>\r\n                <span className=\"description-container\">\r\n                    {this.props.building.isBuildingNext &&\r\n                        <UIProgressBar min={0} max={this.props.building.timeToBuildNext.value} current={this.props.building.buildTimeRemaining}></UIProgressBar>\r\n                    }\r\n                    <span className=\"description\">{this.props.building.description}</span>\r\n                </span>\r\n                <UIBuildingCost onClick={() => this.buy()} building={this.props.building}></UIBuildingCost>\r\n            </li>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Building } from \"../../../game/buildings/Building\";\r\nimport { GameContext } from \"../UIGameContext\";\r\nimport { NumberFormatter } from \"../../../common/NumberFormatter\";\r\n\r\nexport class UIBuildingCost extends React.Component<{building: Building, onClick: () => void}> {\r\n    public constructor (props: {building: Building, onClick: () => void}) {\r\n        super(props);\r\n\r\n        this.props.building.onUpdateAmount.addSubscription(\r\n            this,\r\n            (thisBuilding: Building) => \r\n                this.forceUpdate()\r\n            );\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <GameContext.Consumer>\r\n            {game => \r\n                <ul className=\"resources button\" onClick={this.props.onClick}>\r\n                    {this.props.building.costOfNext.getAll().map(resourceValue => \r\n                        <li className=\"resource\" key={resourceValue.resourceType}>\r\n                            <span className=\"type\">{game.resourceSystem.getResource(resourceValue.resourceType).name}</span>\r\n                            <span className=\"value\">{NumberFormatter.Format(resourceValue.value.value, 0, 0, true)}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            }\r\n            </GameContext.Consumer>\r\n        );\r\n    }\r\n}","import React = require(\"react\");\r\n\r\nexport class UIProgressBar extends React.Component<{min: number, max: number, current: number}> {\r\n    private getFillPercentage(): number {\r\n        return 100 * (this.props.max - this.props.current) / (this.props.max - this.props.min); \r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <span className=\"progress-bar\">\r\n                <span className=\"bar\" style={{width: this.getFillPercentage() + '%'}}></span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport { Game } from \"../../../game/Game\";\r\nimport { UIResource } from \"./UIResource\";\r\nimport { Resource } from \"../../../game/resources/Resource\";\r\n\r\nexport class UIResources extends React.Component<{game: Game}, {resources: Resource[]}> {\r\n    constructor (props: {game: Game}) {\r\n        super(props);\r\n\r\n        const getResources = () => this.props.game.resourceSystem.resources\r\n            .filter(resource => resource.isUnlocked);\r\n\r\n        this.state = {resources: getResources()};\r\n\r\n        this.props.game.onUpdate.addSubscription(\r\n            this, \r\n            () => this.setState({resources: getResources()})\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <ul id=\"resources\">\r\n            {this.state.resources.map((resource) => \r\n                <UIResource key={resource.name} resource={resource}></UIResource>\r\n            )}\r\n            </ul>\r\n        );\r\n    }\r\n}","import * as React from \"react\";\r\nimport { NumberFormatter } from \"../../../common/NumberFormatter\";\r\nimport { Resource } from \"../../../game/resources/Resource\";\r\n\r\nexport class UIResource extends React.Component<{resource: Resource}> {\r\n    render() {\r\n        return (\r\n            <li className=\"resource-line\">\r\n                <span>\r\n                    <span className=\"name\">{this.props.resource.name}</span>\r\n                    <span className=\"increase-per-second\">({NumberFormatter.Format(this.props.resource.income.value, 2, 2)}/s)</span>\r\n                </span>\r\n                <span>\r\n                    <span className=\"amount\">{NumberFormatter.Format(this.props.resource.amount, 2, 2)}</span>\r\n                    {\r\n                        this.props.resource.hasCap\r\n                        ? <span> / {NumberFormatter.Format(this.props.resource.cap.value, 2, 2)}</span>\r\n                        : null\r\n                    }\r\n                </span>\r\n            </li>\r\n        );\r\n    }\r\n}","import React = require(\"react\");\r\nimport { Game } from \"../../../game/Game\";\r\nimport { GameSystem } from \"../../../game/shared/GameSystem\";\r\nimport { UIGameSystemTab } from \"./UIGameSystemTab\";\r\n\r\nexport class UIGameSystemTabs extends React.Component<{game: Game, onSelected: (system: GameSystem)=>void}> {\r\n    private gameSystems: GameSystem[];\r\n    private allGameSystems: GameSystem[];\r\n    private selectedGameSystem: GameSystem;\r\n    public constructor(props: {game: Game, onSelected: (system: GameSystem)=>void}) {\r\n        super(props);\r\n\r\n        this.allGameSystems = [\r\n            props.game.workerSystem,\r\n            props.game.buildingSystem\r\n        ];\r\n\r\n        this.allGameSystems.forEach(system => system.onUnlocked.addSubscription(this, () => this.updateGameSystems()));\r\n\r\n        this.gameSystems = this.getUnlockedGameSystems();\r\n    }\r\n    private getUnlockedGameSystems(): GameSystem[] {\r\n        return this.allGameSystems.filter(system => system.isUnlocked);\r\n    }\r\n    private updateGameSystems(): void {\r\n        this.gameSystems = this.allGameSystems.filter(system => system.isUnlocked);\r\n        this.forceUpdate();\r\n    }\r\n    private selectGameSystem(gameSystem: GameSystem): void {\r\n        this.selectedGameSystem = gameSystem;\r\n        this.props.onSelected(gameSystem);\r\n        this.forceUpdate();\r\n    }\r\n    public componentDidMount () {\r\n        this.selectGameSystem(this.props.game.workerSystem);\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <ul id=\"tabs\">\r\n                {this.gameSystems.map(system => \r\n                    <UIGameSystemTab \r\n                        key={system.name}\r\n                        gameSystem={system} \r\n                        isSelected={system === this.selectedGameSystem}\r\n                        onSelected={()=>this.selectGameSystem(system)}\r\n                    ></UIGameSystemTab>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}","import React = require(\"react\");\r\nimport { GameSystem } from \"../../../game/shared/GameSystem\";\r\n\r\nexport class UIGameSystemTab extends React.Component<{gameSystem: GameSystem, isSelected: boolean, onSelected: () => void}> {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <li className={`tab ${this.props.isSelected ? 'selected' : ''}`} onClick={this.props.onSelected}>\r\n                <img src={`./img/tabs/${this.props.gameSystem.name.toLocaleLowerCase()}.png`}/>\r\n                <span>{this.props.gameSystem.name}</span>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}